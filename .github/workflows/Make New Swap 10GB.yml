name: Make RMX3261 bootimage Recovery

on:
  workflow_dispatch:
    inputs:
      MANIFEST_TYPE:
        description: 'MANIFEST_TYPE'
        required: true
        default: 'twrp'
      MANIFEST_URL:
        description: 'MANIFEST_URL'
        required: true
        default: 'https://github.com/minimal-manifest-twrp/platform_manifest_twrp_aosp.git'
      MANIFEST_BRANCH:
        description: 'MANIFEST_BRANCH'
        required: true
        default: 'twrp-11'
      DEVICE_TREE_URL:
        description: 'DEVICE_TREE_URL'
        required: true
        default: 'https://github.com/DragonWarriorJS/android_device_RMX3261_11_A.79'
      DEVICE_TREE_BRANCH:
        description: 'DEVICE_TREE_BRANCH'
        required: true
        default: 'android-11'
      DEVICE_PATH:
        description: 'DEVICE_PATH'
        required: true
        default: 'device/realme/RMX3261'
      DEVICE_NAME:
        description: 'DEVICE_NAME'
        required: true
        default: 'RMX3261'

jobs:
  build:
    if: github.event.repository.owner.id == github.event.sender.id
    runs-on: ubuntu-18.04
    
    steps:
    - name: Check Out
      uses: actions/checkout@main
      
    - name: Prepare the environment
      run: |
        docker rmi `docker images -q`
        sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/sudo apt/sources.list.d
        sudo apt -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
        sudo apt -y autoremove --purge
        sudo apt -y autoclean
        sudo apt clean
        sudo apt update
        sudo apt -y install bc libstdc++6 git gcc libssl-dev repo
        
    - name: Set variables
      run: |
        echo "::set-output name=date::$(date +%F)"
      id: var
    
    - name: Set Swap Space
      uses: pierotofy/set-swap-space@master
      with:
        swap-size-gb: 10
          
    - name: Install repo
      run: |
        mkdir ~/bin
        curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
        chmod a+x ~/bin/repo
        export PATH=~/bin:$PATH
      
    - name: Initialize repo
      run: |
        PATH=~/bin:$PATH
        mkdir workspace
        cd workspace
        echo "::set-output name=pwd::$(pwd)"
        git config --global user.name "serzhbsv"
        git config --global user.email "netikbsv@yandex.ru"
        repo init --depth=1 -u ${{ github.event.inputs.MANIFEST_URL }} -b ${{ github.event.inputs.MANIFEST_BRANCH }}
      id: pwd
          
    - name: Repo Sync
      run: |
        PATH=~/bin:$PATH
        cd workspace
        repo sync -c -j8 --no-clone-bundle --no-tags
        rm -rf .repo
      
    - name: Clone device
      run: |
        PATH=~/bin:$PATH
        cd ${{ steps.pwd.outputs.pwd }}
        git clone ${{ github.event.inputs.DEVICE_TREE_URL }} -b ${{ github.event.inputs.DEVICE_TREE_BRANCH }} ./${{ github.event.inputs.DEVICE_PATH }}

    - name: Building
      run: |
        PATH=~/bin:$PATH
        cd ${{ steps.pwd.outputs.pwd }}
        export ALLOW_MISSING_DEPENDENCIES=true
        source build/envsetup.sh
        lunch ${{ github.event.inputs.MANIFEST_TYPE }}_${{ github.event.inputs.DEVICE_NAME }}-eng 
        make clean
        make bootimage -j$(nproc --all)

    - name: Upload to Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          workspace/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/ramdisk.img
          workspace/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/boot.img
        name: ${{ github.event.inputs.DEVICE_NAME }}-${{ github.run_id }}
        tag_name: Boot ${{ github.run_id }}
        body: Boot Recovery for ${{ github.event.inputs.DEVICE_NAME }}
      env:
        GITHUB_TOKEN: ${{ secrets.test }}
